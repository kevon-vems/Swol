@page "/exercises/create"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Navigation

<PageTitle>Add Exercise</PageTitle>

<h1>Add Exercise</h1>

<EditForm Model="exercise" OnValidSubmit="HandleValidSubmit" FormName="ExerciseCreateForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText class="form-control" @bind-Value="exercise.Name" />
    </div>
    <div class="mb-3">
        <label class="form-label">Description</label>
        <InputTextArea class="form-control" @bind-Value="exercise.Description" />
    </div>
    <div class="mb-3">
        <label class="form-label">Muscle Groups</label>
        <select class="form-control" multiple @bind="selectedMuscleGroupIds">
            @foreach (var mg in muscleGroups)
            {
                <option value="@mg.Id">@mg.Name</option>
            }
        </select>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <a class="btn btn-secondary ms-2" href="/exercises">Cancel</a>
</EditForm>

@code {
    private Swol.Data.Models.Exercise exercise = new();
    private List<Swol.Data.Models.MuscleGroup> muscleGroups = new();
    private List<int> selectedMuscleGroupIds = new();

    protected override void OnInitialized()
    {
        muscleGroups = Db.MuscleGroups.OrderBy(mg => mg.Name).ToList();
    }

    private async Task HandleValidSubmit()
    {
        Db.Exercises.Add(exercise);
        await Db.SaveChangesAsync();
        // Add ExerciseMuscleGroup entries
        foreach (var mgId in selectedMuscleGroupIds)
        {
            Db.ExerciseMuscleGroups.Add(new Swol.Data.Models.ExerciseMuscleGroup { ExerciseId = exercise.Id, MuscleGroupId = mgId });
        }
        await Db.SaveChangesAsync();
        Navigation.NavigateTo("/exercises");
    }
}
