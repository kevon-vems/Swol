@page "/workoutlogs/delete/{Id:int}"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Navigation
@using Swol.Data.Models
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete Workout Log</PageTitle>

<h1 class="text-3xl font-bold mb-6">Delete Workout Log</h1>

@if (log == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 mb-6 rounded">
        <strong>Are you sure you want to delete this workout log?</strong>
    </div>
    <dl class="grid grid-cols-1 md:grid-cols-4 gap-x-4 gap-y-2 mb-6">
        <dt class="font-semibold text-gray-700">Date</dt>
        <dd class="md:col-span-3">@log.StartTime.ToShortDateString()</dd>
        <dt class="font-semibold text-gray-700">Workout</dt>
        <dd class="md:col-span-3">@log.Workout?.Name</dd>
    </dl>
    <button class="inline-block bg-red-600 hover:bg-red-700 text-white font-semibold py-2 px-4 rounded mr-2" @onclick="DeleteLog">Delete</button>
    <a class="inline-block bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded" href="/workoutlogs">Cancel</a>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private WorkoutLog? log;

    protected override async Task OnInitializedAsync()
    {
        log = await Db.WorkoutLogs.Include(wl => wl.Workout).FirstOrDefaultAsync(wl => wl.Id == Id);
        if (log == null)
        {
            Navigation.NavigateTo("/workoutlogs");
        }
    }

    private async Task DeleteLog()
    {
        if (log != null)
        {
            Db.WorkoutLogs.Remove(log);
            await Db.SaveChangesAsync();
        }
        Navigation.NavigateTo("/workoutlogs");
    }
}
