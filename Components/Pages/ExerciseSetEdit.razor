@page "/exercisesets/edit/{Id:int}"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Navigation
@using Swol.Data.Models
@using Microsoft.EntityFrameworkCore

<PageTitle>Edit Exercise Set</PageTitle>

<h1 class="text-2xl font-bold mb-6">Edit Exercise Set</h1>

@if (set == null || workoutLogs == null || exercises == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="set" OnValidSubmit="HandleValidSubmit" FormName="ExerciseSetEditForm">
        <DataAnnotationsValidator />
        <ValidationSummary class="mb-4 text-red-600" />
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Workout Log</label>
            <InputSelect class="block w-full rounded border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="set.WorkoutLogId">
                <option value="">-- Select Workout Log --</option>
                @foreach (var log in workoutLogs)
                {
                    <option value="@log.Id">@log.StartTime.ToShortDateString()</option>
                }
            </InputSelect>
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Exercise</label>
            <InputSelect class="block w-full rounded border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="set.ExerciseId">
                <option value="">-- Select Exercise --</option>
                @foreach (var exercise in exercises)
                {
                    <option value="@exercise.Id">@exercise.Name</option>
                }
            </InputSelect>
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Reps</label>
            <InputNumber class="block w-full rounded border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="set.Reps" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Weight</label>
            <InputNumber class="block w-full rounded border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="set.WeightInKg" />
        </div>
        <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded shadow">Save</button>
        <a class="ml-3 bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded shadow" href="/exercisesets">Cancel</a>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private ExerciseSet? set;
    private List<WorkoutLog>? workoutLogs;
    private List<Exercise>? exercises;

    protected override async Task OnInitializedAsync()
    {
        set = await Db.ExerciseSets.FindAsync(Id);
        workoutLogs = await Db.WorkoutLogs.ToListAsync();
        exercises = await Db.Exercises.ToListAsync();
        if (set == null)
        {
            Navigation.NavigateTo("/exercisesets");
        }
    }

    private async Task HandleValidSubmit()
    {
        Db.Update(set!);
        await Db.SaveChangesAsync();
        Navigation.NavigateTo("/exercisesets");
    }
}
