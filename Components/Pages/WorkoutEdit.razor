@page "/workouts/edit/{Id:int}"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Navigation
@using Swol.Data.Models
@using Microsoft.EntityFrameworkCore

<PageTitle>Edit Workout</PageTitle>

<div class="max-w-4xl mx-auto p-4 space-y-6">

<h1 class="text-2xl font-bold mb-6">Edit Workout</h1>

@if (workout == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="workout" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary class="mb-4 text-red-600" />
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Name</label>
            <InputText class="block w-full rounded border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" @bind-Value="workout.Name" />
        </div>
        <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-1">Description</label>
            <InputTextArea class="block w-full rounded border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 min-h-[100px]" @bind-Value="workout.Description" />
        </div>
        <div class="flex items-center gap-3">
            <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded shadow">Save</button>
            <a class="bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 rounded shadow" href="/workouts">Cancel</a>
        </div>
    </EditForm>
}

</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Workout? workout;

    protected override async Task OnInitializedAsync()
    {
        workout = await Db.Workouts.FindAsync(Id);
        if (workout == null)
        {
            Navigation.NavigateTo("/workouts");
        }
    }

    private async Task HandleValidSubmit()
    {
        Db.Update(workout!);
        await Db.SaveChangesAsync();
        Navigation.NavigateTo("/workouts");
    }
}