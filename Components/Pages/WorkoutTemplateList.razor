@page "/templates"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Nav
@using Microsoft.EntityFrameworkCore
@using Swol.Data.Models
@using Swol.Data.Models.Template

<PageTitle>Workout Templates</PageTitle>

<div class="max-w-4xl mx-auto p-4 space-y-6">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <h1 class="text-3xl font-bold mb-4 sm:mb-0">Workout Templates</h1>
        <a href="/templates/form" class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded">Create New Template</a>
    </div>

@if (templates == null)
{
    <p><em>Loading...</em></p>
}
else if (!templates.Any())
{
    <div class="bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 rounded">
        <p>No templates found. Get started by creating a template to track your progress.</p>
    </div>
}
else
{
    <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
        @foreach (var template in templates)
        {
            <div class="bg-white rounded shadow-sm border flex flex-col border-gray-200">
                <div class="flex items-center justify-between px-4 py-2 border-b">
                    <h5 class="font-semibold m-0">@template.Name</h5>
                </div>
                <div class="px-4 py-2 border-t flex gap-3">
                    <a href="/templates/form/@template.Id" class="text-sm text-blue-600 hover:text-blue-800 px-2 py-1 rounded">Edit</a>
                </div>
            </div>
        }
    </div>
}

</div>

@code {
    private List<WorkoutTemplate>? templates;

    protected override async Task OnInitializedAsync()
    {
        templates = await Db.WorkoutTemplates
            .ToListAsync();
    }
}