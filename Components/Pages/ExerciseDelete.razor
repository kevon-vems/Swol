@page "/exercises/delete/{Id:int}"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Navigation
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete Exercise</PageTitle>

<h1>Delete Exercise</h1>

@if (exercise == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="alert alert-warning">
        <strong>Are you sure you want to delete this exercise?</strong>
    </div>
    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@exercise.Name</dd>
        <dt class="col-sm-2">Muscle Groups</dt>
        <dd class="col-sm-10">@string.Join(", ", exercise.ExerciseMuscleGroups.Select(emg => emg.MuscleGroup.Name))</dd>
    </dl>
    <button class="btn btn-danger" @onclick="DeleteExercise">Delete</button>
    <a class="btn btn-secondary ms-2" href="/exercises">Cancel</a>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Swol.Data.Models.Exercise? exercise;

    protected override async Task OnInitializedAsync()
    {
        exercise = await Db.Exercises
            .Include(e => e.ExerciseMuscleGroups)
            .ThenInclude(emg => emg.MuscleGroup)
            .FirstOrDefaultAsync(e => e.Id == Id);
        if (exercise == null)
        {
            Navigation.NavigateTo("/exercises");
        }
    }

    private async Task DeleteExercise()
    {
        if (exercise != null)
        {
            Db.Exercises.Remove(exercise);
            await Db.SaveChangesAsync();
        }
        Navigation.NavigateTo("/exercises");
    }
}
