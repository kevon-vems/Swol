@page "/templates/form/{Id:int?}"
@using Swol.Data.Models
@using Microsoft.EntityFrameworkCore
@using Swol.Enums

<div class="justify-self-start">
    <button type="submit" form="templateForm" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition">@(template.Id > 0 ? "Save" : "Create")</button>
</div>
<div class="pt-2">
    <div>
        <EditForm Model="template" OnValidSubmit="HandleSubmit" id="templateForm">
            <div class="mb-3">
                <div>
                    <div class="flex flex-wrap gap-4">
                        <div class="w-full md:w-1/4">
                            <label for="name" class="block text-sm font-medium mb-1">Name</label>
                            <input type="text" id="name" class="block w-full border border-gray-300 rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" @bind="template.Name" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <div class="flex flex-row gap-2 overflow-x-auto flex-nowrap items-start w-full max-w-screen sm:max-w-[calc(100vw-250px)]">
                    @foreach (var day in template.Days.OrderBy(d => d.DayOfWeek))
                    {
                        <WorkoutTemplateDayCard Day="day"
                                                TemplateDays="template.Days"
                                                EditingExercises="editingExercises"
                                                SelectedMuscleGroup="selectedMuscleGroup"
                                                RemoveDay="RemoveDay"
                                                DayOfWeekChanged="OnDayOfWeekChanged"
                                                ExerciseSelected="OnExerciseSelected"
                                                MuscleGroupChanged="OnMuscleGroupChanged"
                                                RemoveSelectedMuscleGroup="RemoveSelectedMuscleGroup"
                                                RemoveExercise="RemoveExerciseFromDay"
                                                StartEditingExercise="StartEditingExercise"
                                                StopEditingExercise="StopEditingExercise"
                                                GetExercisesForDay="GetExercisesForDay" />
                    }
                    @if (template.Days.Count < 7)
                    {
                        <div class="bg-stone-50 rounded w-[250px] min-w-[250px] max-w-[250px] flex flex-col border border-1 border-gray-400 p-2">
                            <button type="button"
                                    class="px-2 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700 transition"
                                    @onclick="AddDay">
                                Add Day
                            </button>
                        </div>
                    }
                </div>
            </div>
        </EditForm>
    </div>
</div>
