@page "/mesocycles/{MesocycleId:int}/weeks/{WeekNumber:int}/days/{DayNumber:int}"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Nav
@using Swol.Data.Models
@using Microsoft.EntityFrameworkCore

<PageTitle>Mesocycle Day</PageTitle>

@if (isLoading)
{
    <p><em>Loading...</em></p>
}
else if (day == null)
{
    <div class="text-red-600">Day not found.</div>
}
else
{
    <h1 class="text-3xl font-bold mb-4">@day.Mesocycle.Name - Week @day.WeekNumber Day @day.DayNumber (@day.DayOfWeek)</h1>

    @if (day.Exercises.Any())
    {
        <div class="overflow-x-auto mb-6">
            <table class="min-w-full bg-white border border-gray-200 rounded-lg shadow-sm">
                <thead>
                    <tr>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">#</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Exercise</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Sets</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Reps</th>
                        <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Weight (kg)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ex in day.Exercises.OrderBy(e => e.OrderInDay))
                    {
                        <tr class="border-b">
                            <td class="px-4 py-2">@ex.OrderInDay</td>
                            <td class="px-4 py-2">@ex.Exercise.Name</td>
                            <td class="px-4 py-2">@ex.Sets</td>
                            <td class="px-4 py-2">@ex.RepsPerSet</td>
                            <td class="px-4 py-2">@ex.WeightInKg</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>No exercises defined for this day.</p>
    }

    <a href="#" class="inline-block bg-green-400 text-white font-medium py-2 px-4 rounded opacity-60 cursor-not-allowed">Start Workout (coming soon)</a>
}

@code {
    [Parameter] public int MesocycleId { get; set; }
    [Parameter] public int WeekNumber { get; set; }
    [Parameter] public int DayNumber { get; set; }

    private bool isLoading = true;
    private MesocycleDay? day;

    protected override async Task OnInitializedAsync()
    {
        day = await Db.MesocycleDays
            .Include(d => d.Mesocycle)
            .Include(d => d.Exercises)
                .ThenInclude(e => e.Exercise)
            .FirstOrDefaultAsync(d => d.MesocycleId == MesocycleId &&
                                      d.WeekNumber == WeekNumber &&
                                      d.DayNumber == DayNumber);

        isLoading = false;
    }
}