@page "/workoutlogs"
@inject Swol.Data.ApplicationDbContext Db
@inject NavigationManager Nav
@using Swol.Data.Models
@using Microsoft.EntityFrameworkCore

<PageTitle>Workout Logs</PageTitle>

<div class="max-w-4xl mx-auto p-4 space-y-6">

<div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6 gap-4">
    <h1 class="text-3xl font-bold">Workout Logs</h1>
    <a class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded" href="/workoutlogs/create">Add Workout Log</a>
</div>

@if (logs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="overflow-x-auto">
        <table class="min-w-full bg-white border border-gray-200 rounded-lg shadow-sm">
            <thead>
                <tr>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Date</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Workout</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Mesocycle</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Duration</th>
                    <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b">Sets</th>
                    <th class="px-4 py-2 border-b"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var log in logs)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-4 py-2">@log.StartTime.ToShortDateString()</td>
                        <td class="px-4 py-2">@log.Workout?.Name</td>
                        <td class="px-4 py-2">
                            @if (log.Mesocycle != null)
                            {
                                <span>@log.Mesocycle.Name - Week @log.MesocycleWeek</span>
                            }
                            else
                            {
                                <span class="text-gray-400">-</span>
                            }
                        </td>
                        <td class="px-4 py-2">
                            @if (log.EndTime.HasValue)
                            {
                                <span>@((int)(log.EndTime.Value - log.StartTime).TotalMinutes) min</span>
                            }
                            else
                            {
                                <span class="text-yellow-600 font-semibold">In progress</span>
                            }
                        </td>
                        <td class="px-4 py-2">@log.ExerciseSets.Count</td>
                        <td class="px-4 py-2 space-x-2">
                            <a class="inline-block bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-1 px-3 rounded text-sm" href="/workoutlogs/edit/@log.Id">Edit</a>
                            <a class="inline-block bg-red-600 hover:bg-red-700 text-white font-medium py-1 px-3 rounded text-sm" href="/workoutlogs/delete/@log.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

</div>

@code {
    private List<WorkoutLog>? logs;

    protected override async Task OnInitializedAsync()
    {
        logs = await Db.WorkoutLogs
            .Include(wl => wl.Workout)
            .Include(wl => wl.Mesocycle)
            .Include(wl => wl.ExerciseSets)
            .OrderByDescending(wl => wl.StartTime)
            .ToListAsync();
    }
}
